# Intro to React

# Schedule
* Introduce React
* Explain Component Driven Development
* Explore the basics of a React app w/ the 
create-react-app tool
* Practice building components

## What is React??
* A JavaScript library for building user interfaces
(a library is: third party code that gives you functionality)
* It allows us to create significantly more powerful front-ends much more easily

Throw back to yesterday:
Server-Side Rendering - (w/ EJS)

React is very widely used!
https://insights.stackoverflow.com/survey/2021#most-popular-technologies-webframe

React Timeline:
- First created at Facebook 2011
- Used at Instagram in 2012
- Open Sourced in 2013

ðŸ’¡ React was born out of the frustrations of the traditional MVC model
    * traditionally, "separation of concerns" was practiced by splitting HTML and JS

ðŸ“– "Components are the fundamental building blocks of our application"
    * Think EJS Partials, but souped up with the power of JavaScript!

ðŸ’ª Exercise: Explore all of the files that create-react-app made! 


ðŸ’¡ JSX
    * It's JavaScript code that *looks* like HTML

Notes and Findings - 
* App.js is the top level component!
* Now know how to create new components, as well as how to 
import them into other components


ðŸ’¡ The Virtual DOM
    - Frustrations w/ the JS DOM API
        - It's annoying to search for DOM elements
        - Managing state is very annoying
            - State of JS variables
            - State of the DOM elements

    - It is a very computationally expensive operation
    to change anything in the DOM
    - The Virtual DOM is an in-memory representation of the actual DOM
    - The actual DOM is only updated as necessary to bring it to a desired new state
    - Instead of re-rendering the entire page, react only re-renders the portions of the page have changes

<div>
    <nav>
        <img>
        <div>
            Henry
        </div>
    </nav>
</div>

ðŸ’¡ The two different ways to write a component
    1. Functional component 
        - Are best used for components that are just presentational in nature - aka: You're just displaying some text
        - Disclaimer: Nowadays, "hooks" allow function components
        to do all the stuff class components can

    2. Class-based component
        - Are best used when you need components to have more functionality
            - functions ()
            - Lifecycle methods
            - AJAX calls - like fetch()